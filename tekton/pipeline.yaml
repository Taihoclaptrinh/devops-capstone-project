# This pipeline needs the following tasks from Tekton Hub
#   - git-clone
#   - flake8
#   - buildah
#
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:  
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
    - name: branch
      default: main
    - name: build-image  # New parameter for the Docker image to build
  tasks:
    - name: init
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: cleanup

    - name: clone
      workspaces:
        - name: output
          workspace: pipeline-workspace          
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch)
      runAfter:
        - init

    - name: lint
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: flake8
      params:
        - name: image
          value: "python:3.9-slim"
        - name: args
          value: ["--count", "--max-complexity=10", "--max-line-length=127", "--statistics"]
      runAfter:
        - clone

    - name: tests
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: nose
      params:
        - name: args
          value: "-v --with-spec --spec-color"
      runAfter:
        - clone

    - name: build  # New build task added
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: buildah  # Using the buildah ClusterTask
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.build-image)"  # Set image name from parameters
      runAfter:
        - lint  # Wait for lint to complete
        - tests  # Wait for tests to complete
